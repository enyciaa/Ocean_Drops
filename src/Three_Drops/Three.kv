#kivy 1.8.0

###Templates###
<Button_Layout@RelativeLayout>
	size_hint: None, None
	width: app.three_drops.button_width
	height: app.three_drops.button_height
	
<Back_Layout@Button_Layout>
	center_x: app.three_drops.back_x     #Goes back to main app and then to three drops
	center_y: app.three_drops.back_y
	
<Next_Layout@Button_Layout>
	center_x: app.three_drops.next_x
	center_y: app.three_drops.next_y

<Back_Button@ButtonClicks>
	source: app.td_layout["back_button"]["background"]
	
<Next_Button@ButtonClicks>
	source: app.td_layout["next_button"]["background"]
	
<Text_Box@TextInput>
	border: [0, 0, 0, 0]
	background_color: app.td_layout["text_box"]["text_box_background"]         ####0, 0, 0, 0 makes the background transparent	 
	font_name: app.td_layout["text_box"]["font"]
	font_size: sp(app.td_layout["text_box"]["font_size"])
	line_spacing: app.td_layout["text_box"]["line_spacing"]
	hint_text_color: app.td_layout["text_box"]["hint_text_color"]
	foreground_color: app.td_layout["text_box"]["text_color"]



###Widgets###		
<StartScreen>	
	canvas.before:
        Rectangle:
        	source: app.td_layout["start_screen"]["background"]	
            size: self.size
            pos: self.pos
           
	BoxLayout:
		size: root.size
		orientation: 'vertical'	
		
		###Header
		BoxLayout:
			size_hint_x: app.td_layout["start_screen"]["text_width"]
			size_hint_y: app.td_layout["start_screen"]["header_height"]
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			orientation: 'vertical'
			SubHeading:
				size_hint_y: app.td_layout["start_screen"]["title_height"]
				text: app.td_layout["start_screen"]["title"]
			NormalText:
				text: app.td_layout["start_screen"]["description_text"]
				valign: 'top'
		
		###Quote
		BoxLayout: 
			size_hint_x: app.td_layout["start_screen"]["text_width"]
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			orientation: 'vertical'
			NormalText:
				font_size: sp(app.td_layout["start_screen"]["quote_font_size"])
				text: app.td_layout["start_screen"]["quote"]
				valign: 'bottom'	
			NormalText:
				size_hint_y: app.td_layout["start_screen"]["quote_name_size"]
				font_size: sp(app.td_layout["start_screen"]["quote_font_size"])
				text: app.td_layout["start_screen"]["quote_name"]
				valign: 'top'
			
		###Read more button
		BoxLayout:
			size_hint_y: app.td_layout["start_screen"]["read_button_height"]	
			orientation: 'vertical'
			RelativeLayout:
				ButtonClicks:
					on_touch_up: 
						button_identifier = 'but_004'
						cond1 = self.collide_point(*args[1].pos)                
						if cond1: self.click_up(self, button_identifier) 
				ButtonLabel:
					color: app.td_layout["start_screen"]["read_button_color"]
					text: app.td_layout["start_screen"]["read_button_text"]
				
		###Bottom Filler
		BoxLayout:	
			size_hint_y: app.td_layout["start_screen"]["blank_height"]			
			
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_005'          #This function runs on touch up
				cond1 = self.collide_point(*args[1].pos)                     #only runs if touch up is on button
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]
	Next_Layout:
		Next_Button:
			on_touch_up: 
				button_identifier = 'but_006'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)	
		ButtonLabel:
			pos_hint: {'center_x': 0.25, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["next_text"]
			
		

<Three>
	canvas.before:
        Rectangle:
        	source: app.td_layout["three"]["background"] 
            size: self.size
            pos: self.pos
	
	###Clouds
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		
		###Top Filler
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["top_filler"]	
		
		###Top Cloud
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["cloud_height"]
			orientation: 'horizontal'	
			BoxLayout:	
			Text_Box:
				size_hint_x: app.td_layout["three"]["cloud_width_top"]
				hint_text: app.td_layout["three"]["cloud_text_top"] 	
			BoxLayout:	 
				size_hint_x: app.td_layout["three"]["cloud_blank_top"]
		
		###Middle 1 Filler
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["middle_1_filler"]	
							
		###Middle Cloud	
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["cloud_middle_height"]
			orientation: 'horizontal'	
			BoxLayout:	 
				size_hint_x: app.td_layout["three"]["cloud_blank_middle"]		
			Text_Box:	
				size_hint_x: app.td_layout["three"]["cloud_width_middle"]
				hint_text: app.td_layout["three"]["cloud_text_middle"] 	
			BoxLayout:
		
		###Middle 2 Filler
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["middle_2_filler"]	
				
		###Bottom Cloud	
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["cloud_height"]
			orientation: 'horizontal'		
			BoxLayout:
				size_hint_x: app.td_layout["three"]["cloud_blank_bottom"]	
			Text_Box:
				size_hint_x: app.td_layout["three"]["cloud_width_bottom"]
				hint_text: app.td_layout["three"]["cloud_text_bottom"] 		
				#once kivy 1.9.0 comes out can make this default behaviour for text input based on keyboard height
				on_focus:
					if args[1]: app.ocean_drops.app_switcher.keyboard_up(self)
					else: app.ocean_drops.app_switcher.keyboard_down()
			BoxLayout:	
		
		###Bottom Filler
		BoxLayout:	
			size_hint_y: app.td_layout["three"]["bottom_filler"]		
		
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_007'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]
	Next_Layout:
		Next_Button:
			on_touch_up: 
				button_identifier = 'but_008'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.25, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["next_text"]
				
	
				
<Sent>	
	canvas.before:
        Rectangle:
        	source: app.td_layout["sent"]["background"]
            size: self.size
            pos: self.pos
	
	###Text
	BoxLayout:
		size: root.size	
		orientation: 'vertical'	
		
		###Top Filler	
		BoxLayout:	
			size_hint_y: app.td_layout["sent"]["top_filler_size"]
		
		###Text			
		NormalText:
			font_size: sp(app.td_layout["sent"]["text_size"])
			color: app.td_layout["sent"]["text_color"]
			text: app.td_layout["sent"]["text"]
			
		###Bottom Filler	
		BoxLayout:	
			size_hint_y: app.td_layout["sent"]["blank_height"]			
	
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_009'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]
	Next_Layout:
		Next_Button:
			on_touch_up: 
				button_identifier = 'but_010'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.25, 'center_y': 0.5}
			text: app.td_layout["sent"]["menu_button_text"]					
			
		
		
<ReadMore>						
	canvas.before:
        Rectangle:
        	source: app.td_layout["read_more"]["background"]
            size: self.size
            pos: self.pos
	
	###Text
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		
		###Text
		BoxLayout:
			size_hint_x: app.td_layout["read_more"]["text_width"]
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			orientation: 'vertical'
			SubHeading:
				size_hint_y: app.td_layout["read_more"]["title_height"]
				text: app.td_layout["read_more"]["title"]
			NormalText:
				size_hint_y: app.td_layout["read_more"]["what_text_height"]
				text: app.td_layout["read_more"]["what_text"]
				valign: 'top'
			SubHeading:
				size_hint_y: app.td_layout["read_more"]["title_height"]
				text: app.td_layout["read_more"]["sub_heading"]
			NormalText:
				text: app.td_layout["read_more"]["why_text"]
				valign: 'top'	
				
		###Bottom Filler		
		BoxLayout:	
			size_hint_y: app.td_layout["read_more"]["blank_height"]	
		
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_011'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]							
			


<ThreeDrops>								
						