#kivy 1.8.0

###Templates###
<Button_Layout@RelativeLayout>
	size_hint: None, None
	width: sp(app.td_layout["button_layout"]["width"])
	height: sp(app.td_layout["button_layout"]["height"])
	
<Back_Layout@Button_Layout>
	center_x: app.three_drops.back_x     #Goes back to main app and then to three drops
	center_y: app.three_drops.back_y
	
<Next_Layout@Button_Layout>
	center_x: app.three_drops.next_x
	center_y: app.three_drops.next_y

<Back_Button@ButtonClicks>
	source: app.td_layout["back_button"]["background"]
	
<Next_Button@ButtonClicks>
	source: app.td_layout["next_button"]["background"]
	
<Blank_Bottom@BoxLayout>
	size_hint_y: None
	height: sp(app.td_layout["blank_bottom"]["height"])	


###Widgets###		
<StartScreen>	
	canvas.before:
        Rectangle:
        	source: app.td_layout["start_screen"]["background"]	
            size: self.size
            pos: self.pos
           
	BoxLayout:
		size: root.size
		orientation: 'vertical'	
		spacing: sp(app.td_layout["start_screen"]["spacing"])
		
		###Quote
		NormalText:
			size_hint: app.td_layout["start_screen"]["quote_size"]
			pos_hint: {'center_x': 0.5, 'center_y': 0.5}
			text: app.td_layout["start_screen"]["quote"]
			valign: 'bottom'	
		NormalText:
			size_hint: app.td_layout["start_screen"]["quote_name_size"]
			text: app.td_layout["start_screen"]["quote_name"]
			valign: 'top'
			
		###Read more button
		BoxLayout:
			orientation: 'vertical'
			NormalText:
				text: app.td_layout["start_screen"]["read_button_description"]
			RelativeLayout:
				ButtonClicks:
					source: app.layout["buttons_one"]["mini_app_button"]
					on_touch_up: 
						button_identifier = 'but_004'
						cond1 = self.collide_point(*args[1].pos)                
						if cond1: self.click_up(self, button_identifier) 
				ButtonLabel:
					text: app.td_layout["start_screen"]["read_button_text"]
				
		###Bottom Filler
		Blank_Bottom:				
			
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_005'          #This function runs on touch up
				cond1 = self.collide_point(*args[1].pos)                     #only runs if touch up is on button
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]
	Next_Layout:
		Next_Button:
			on_touch_up: 
				button_identifier = 'but_006'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)	
		ButtonLabel:
			pos_hint: {'center_x': 0.25, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["next_text"]


			
<Text_Box@TextInput>
	size_hint: app.td_layout["three"]["text_box_size"]
	border: [0, 0, 0, 0]
	background_color: app.td_layout["three"]["text_box_background"]         ####0, 0, 0, 0 makes the background transparent	
	text: app.td_layout["three"]["cloud_text"] 	
	
<Cloud@BoxLayout, RelativeLayout>
	size_hint: app.td_layout["three"]["cloud_size"]  
	canvas:
		Color:
			rgba: app.td_layout["three"]["cloud_color"]  
    	Rectangle:
        	source: app.td_layout["three"]["cloud_background"]  
            size: self.size
            pos: self.pos	            	
	Text_Box:
		pos_hint: {'center_x': 0.5, 'center_y': 0.5}
	
<Cloud_Left@BoxLayout>
	BoxLayout:	
		orientation: 'horizontal'		
		Cloud:
		BoxLayout:	   
    
<Cloud_Right@BoxLayout>
	BoxLayout:	
		orientation: 'horizontal'		
		BoxLayout:	
		Cloud:	

<Three>
	canvas.before:
        Rectangle:
        	source: app.td_layout["three"]["background"] 
            size: self.size
            pos: self.pos
	
	###Clouds
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		
		###Top Cloud
		Cloud_Left:
						
		###Middle Cloud	
		Cloud_Right:

		###Bottom Cloud	
		Cloud_Left:
		
		###Bottom Filler
		Blank_Bottom:	
		
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_007'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]
	Next_Layout:
		Next_Button:
			on_touch_up: 
				button_identifier = 'but_008'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.25, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["next_text"]
				
	
				
<Sent>	
	canvas.before:
        Rectangle:
        	source: app.td_layout["sent"]["background"]
            size: self.size
            pos: self.pos
	
	###Text
	BoxLayout:
		size: root.size	
		orientation: 'vertical'	
		
		###Text			
		NormalText:
			text: app.td_layout["sent"]["text"]
			
		###Bottom Filler	
		Blank_Bottom:		
	
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_009'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]
	Next_Layout:
		Next_Button:
			on_touch_up: 
				button_identifier = 'but_010'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.25, 'center_y': 0.5}
			text: app.td_layout["sent"]["menu_button_text"]					
			
		
		
<ReadMore>						
	canvas.before:
        Rectangle:
        	source: app.td_layout["read_more"]["background"]
            size: self.size
            pos: self.pos
	
	###Text
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		
		###Text
		BoxLayout:
			orientation: 'vertical'
			SubHeading:
				size_hint_y: None
				height: sp(app.td_layout["read_more"]["title_height"])
				text: app.td_layout["read_more"]["title"]
			NormalText:
				text: app.td_layout["read_more"]["main_text"]
				valign: 'top'
				
		###Bottom Filler		
		Blank_Bottom:
		
	###Buttons
	Back_Layout:
		Back_Button:
			on_touch_up: 
				button_identifier = 'but_011'
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)
		ButtonLabel:
			pos_hint: {'center_x': 0.75, 'center_y': 0.5}
			text: app.td_layout["whole_section"]["back_text"]							
			
										
						