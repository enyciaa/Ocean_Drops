#kivy 1.8.0

###Templates###
            
            
###Widgets###
<ButtonClicks>



<TitleDrop>
	Button:
        text: 'About'
        size_hint_y: None
        height: sp(app.layout["title_drop"]["button_height"])
        
                   

<TitleBar> 
	canvas.before:
		#For some reason if Color is removed the background will not display
		Color: 
        Rectangle:
        	source: app.layout["title_bar"]["background"]
            size: self.size
            pos: self.pos
		                      
	BoxLayout:
		size: root.size
		orientation: 'horizontal'
		Image:
			size_hint_x: app.layout["title_bar"]["button_size"]	
			source: app.layout["title_bar"]["app_icon"]
		Label:
			font_name: app.layout["ocean_drops"]["heading_1"]
			font_size: sp(app.layout["title_bar"]["heading_size"])
			color: app.layout["title_bar"]["text_color"]
			text_size: self.size
			halign: 'left'
			valign: 'middle'
			text: root.app_title
		ButtonClicks:
			size_hint_x: app.layout["title_bar"]["button_size"]	
			source: app.layout["title_bar"]["home_icon"]
			on_touch_up: 
				button_identifier = 'but_001'       #The function to run when the button is pressed
				cond1 = self.collide_point(*args[1].pos)                #code only runs if touch up is inside the button
				if cond1: self.click_up(self, button_identifier) 
		ButtonClicks: 
			size_hint_x: app.layout["title_bar"]["button_size"]	
			source: app.layout["title_bar"]["settings_icon"]	        #At the back_down/back_normal are the same but in future this will change
			on_touch_up: 
				button_identifier = 'but_002'       
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier) 
			
			
	
<Mini_App_Layout@BoxLayout>
	orientation: 'vertical'
	size_hint_y: None
	height: sp(app.layout["scroll_menu"]["button_height"]) 	
	
<Mini_App_Description@Label>
			
<ScrollMenu>
	effect_cls: 'DampedScrollEffect'
	
	button_height: app.layout["scroll_menu"]["button_height"]
	number_buttons: app.layout["scroll_menu"]["mini_apps"] + 1           ##number of apps plus footer
	height_all_buttons: (root.button_height * root.number_buttons)       #button height times number of buttons
	blank_height: (root.scroll_height - root.height_all_buttons)      #scroll height minus height of all buttons
	padding_x: sp(app.layout["scroll_menu"]["padding_x"])
	padding_y: sp(app.layout["scroll_menu"]["padding_y"])
	
	##Background image
	canvas.before:
        Rectangle:
        	source: app.layout["scroll_menu"]["background"]
            size: self.size
            pos: self.pos
	
	BoxLayout:
		size_hint_y: None
		height: sp(root.scroll_height)
		orientation: 'vertical'
		spacing: sp(app.layout["scroll_menu"]["spacing"])
		padding: (root.padding_x, root.padding_y)
		
		##Three_Drops buttons
		Mini_App_Layout:
			ButtonClicks:
				source: app.layout["scroll_menu"]["three_button"]
				on_touch_up: 
					button_identifier = 'but_003'
					cond1 = self.collide_point(*args[1].pos)                
					if cond1: self.click_up(self, button_identifier) 	
			Mini_App_Description:
				size_hint_y: app.layout["scroll_menu"]["description_height"]
				text: 'Hello world'
				
		##Blank space to fill out scroll menu		
		BoxLayout:
			height: sp(root.blank_height)
		
		##Footer	
		Label:
			font_name: app.layout["ocean_drops"]["heading_1"]
			font_size: sp(app.layout["scroll_menu"]["footer_size"])
			size_hint_y: None
			height: sp(app.layout["scroll_menu"]["button_height"])
			text: app.layout["scroll_menu"]["footer"]
	
	

<Container>

			
			
<MainMenu>
	title_bar: title_obj
	container: container_obj
            
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		RelativeLayout:        
			TitleBar:
				id: title_obj
		Container:	
			id: container_obj
			size_hint_y: app.layout["main_menu"]["container_height"]		
			
								