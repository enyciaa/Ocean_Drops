#kivy 1.8.0
#import to allow transitions for screenmanager to be set in kv file
#:import sm kivy.uix.screenmanager

###Templates###
<Mini_App_Description@MiniAppDescription>
	size_hint: app.layout["mini_app_description"]["size"]
	pos_hint: {'center_x': 0.5, 'center_y': 0.5}         

<Button_Label@ButtonLabel>   
	size_hint: app.layout["button_label"]["size"]
	pos_hint: {'center_x': 0.5, 'center_y': 0.5}          
            
            
            
###Widgets###
<TitleDrop>
	auto_width: False
	width: root.button_width
	
	RelativeLayout:
		size_hint_y: None
        height: root.button_height
		ButtonClicks:
	        source: app.layout["title_drop"]["drop_down_button"]
	        on_touch_up: 
				button_identifier = 'but_012'       
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier)  
        Button_Label:
			text: app.layout["title_drop"]["button_1_text"]
			             

<TitleBar> 
	canvas.before:
		#For some reason if Color is removed bits of the background change
		Color: 
        Rectangle:
        	source: app.layout["title_bar"]["background"]
            size: self.size
            pos: self.pos
		                      
	BoxLayout:
		size: root.size
		orientation: 'horizontal'
		Image:
			size_hint_x: app.layout["title_bar"]["button_size"]	
			source: app.layout["title_bar"]["app_icon"]		
		Heading:
			text: root.app_title	
		ButtonClicks:
			size_hint_x: app.layout["title_bar"]["button_size"]	
			source: app.layout["title_bar"]["home_icon"]
			on_touch_up: 
				button_identifier = 'but_001'       #The function to run when the button is pressed
				cond1 = self.collide_point(*args[1].pos)         #code only runs if touch up is inside the button
				if cond1: self.click_up(self, button_identifier) 
		ButtonClicks: 
			size_hint_x: app.layout["title_bar"]["button_size"]	
			source: app.layout["title_bar"]["settings_icon"]
			on_touch_up: 
				button_identifier = 'but_002'       
				cond1 = self.collide_point(*args[1].pos)                
				if cond1: self.click_up(self, button_identifier) 
		
		
				
			
<ButtonsOne>	
	#Can change this to a grid layout with 4 buttons when there are enough mini apps	
	BoxLayout:
		orientation: 'vertical'
		
		##Three_Drops button
		RelativeLayout:
			ButtonClicks:
				source: app.layout["buttons_one"]["mini_app_button"]
				on_touch_up: 
					button_identifier = 'but_003'
					cond1 = self.collide_point(*args[1].pos)                
					if cond1: self.click_up(self, button_identifier) 	
			Button_Label:
				text: app.td_layout["whole_section"]["app_title"] 
		Mini_App_Description:
			text: app.layout["buttons_one"]["top_left_descrip"]	



<ButtonSwitcher>
	transition: sm.SlideTransition()
			
	
	
<MainMenu>
	button_switcher: button_switcher_obj
		
	##Background image
	canvas.before:
        Rectangle:
        	source: app.layout["menu_background"]["background"]
            size: self.size
            pos: self.pos
    
    ##Content        
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		
		#Menu buttons are added here
		BoxLayout:
			AnchorLayout:
				anchor_x: 'center'
				anchor_y: 'center'
				BoxLayout:
					size_hint: app.layout["buttons_one"]["button_grid_size"]
					ButtonSwitcher:
						id: button_switcher_obj
						
		#Blank height
		BoxLayout:
			size_hint_y: app.layout["menu_background"]["blank_height"]
				
		##Footer				
		Footer:
			size_hint_y: app.layout["menu_background"]["footer_height"]
			text: app.layout["menu_background"]["footer"]
			
			

<AppSwitcher>
	transition: sm.FadeTransition()
			
			
<OceanDrops>
	title_bar: title_obj
	app_switcher: app_switcher_obj
            
	BoxLayout:
		size: root.size
		orientation: 'vertical'
		RelativeLayout:        
			TitleBar:
				id: title_obj 		
		AppSwitcher:
			id: app_switcher_obj
			size_hint_y: app.layout["ocean_drops"]["app_switcher_height"]	
			
								